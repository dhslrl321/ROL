# 가게 상세-2

## Repository
controller 에 중복되는 코드가 있기 때문에 이를 따로 Repository로 빼서 관리함.
```
@GetMapping("/restaurants")
    public List<Restaurant> list(){
        List<Restaurant> restaurants = new ArrayList<>();
        Restaurant restaurant = new Restaurant(1004L, "Bob zip", "Seoul");
        restaurants.add(restaurant);
        return restaurants;
    }

    @GetMapping("restaurants/{id}")
    public Restaurant detail(@PathVariable("id") Long id){

        List<Restaurant> restaurants = new ArrayList<>();
        restaurants.add(new Restaurant(1004L, "Bob zip", "Seoul"));
        restaurants.add(new Restaurant(2020L, "Cyber food", "Seoul"));

        return restaurants.stream()
                .filter(r -> r.getId().equals(id))
                .findFirst()
                .orElse(null);
    }
```

#### Repository class 생성
```
package com.example.jpatest.domain;

import java.util.ArrayList;
import java.util.List;

public class RestaurantRepository {
    private List<Restaurant> restaurants = new ArrayList<>();

    public RestaurantRepository(){

        restaurants.add(new Restaurant(1004L, "Bob zip", "Seoul"));
        restaurants.add(new Restaurant(2020L, "Cyber food", "Seoul"));
    }
    public List<Restaurant> findAll() { // 모두 찾기

        return restaurants;
    }

    public Restaurant findById(Long id) { // id로 찾기
        return restaurants.stream()
                .filter(r -> r.getId().equals(id))
                .findFirst()
                .orElse(null);
    }
}
```

#### Controller에서 Repository 사용

```
package com.example.jpatest.interfaces;

import com.example.jpatest.domain.Restaurant;
import com.example.jpatest.domain.RestaurantRepository;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

@RestController
public class RestaurantController {

    RestaurantRepository repository;

    @GetMapping("/restaurants")
    public List<Restaurant> list(){
        return restaurants = repository.findAll();
    }

    @GetMapping("restaurants/{id}")
    public Restaurant detail(@PathVariable("id") Long id){

        return restaurant = repository.findById(id);
    }
}
```


