# Linked List
- 항목들을 노드라고 하는 곳에 분산하여 저장
- 다음 항목(노드)을 가리키는 주소도 같이 저장
> 노드 : <항목, 주소> 쌍
- 노드는 데이터 필드와 링크 필드로 구성
> 데이터 필드 : 리스트의 원소, 데이터의 값
> 링크 필드 : 다른 노드의 주소 값을 저장하는 장소(포인터)
- 메모리 안의 노드의 물리적 순서가 리스트의 논리적 순서와 일치할 필요 x

## 장점

- 삽입, 삭제가 용이함.
- 연속된 메모리 공산이 필요 없음

## 단점
- 구혐이 어려움
- 오류 발생하기 쉬움

## 연결 리스트의 구조

(노드) <-> 다음 노드
#### 헤드 포인터 
- 리스트의 첫 번째 노드를 가리키는 변수

## 연결 리스트의 종류
- 단순 연결 리스트 : 끝이 null을 가리킴
- 원형 연결 리스트 : 끝이 헤드 포인터를 가리킴
- 이중 연결 리스트 : 끝이 바로 전의 노드를 가리킴 (노드에 항목이 하나 더 생김)

## 연결 리스트로 구현한 스택과 큐
원형 큐