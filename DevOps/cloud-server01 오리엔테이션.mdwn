# DevOps

- 소통, 협업, 통합 및 **자동화**를 강조하는 소프트웨어 개발 방법론
- 개발과 운영이 상호의존적 대응
- 개발과 운영 사이의 역할

#### Tool

- Jira
- Confluence
- Bitbucket
- Jenkins

#### 업무 환경

- EC2, S3, RDS
- Docker

**개발 프로세스**
업무 지시서로부터 시작 ->

- 코드 ->
- 빌드(소스를 컴파일) ->
- 테스트(동작의 이상 유무 검증) ->
- 패키지(`war`파일등으로 묶기) ->
- 릴리즈(실제로 운영이 반영되는 프로세스) ->
- 모니터링(로그 파일이나 다양한 분석 도구로 운영이 잘 되는지 확인)
- 추가적으로 구성(IaC) 단계가 존재로 인프라에 관한 문제를 다룬다.

이러한 개발 프로세스를 자동으로 구성하는 것이 최종 목표.

# Jira, Confluence

업무 배정 및 일정 조율 및 해당 업무에 대한 소스를 볼 수 있음
조각화된 업무를 관리

## Jira

# Bitbucket(형상 관리), Jenkins

**업무의 자동화**
개발 영역에서 업무 스타일을 관리하는 영역으로 전문성을 높히는 영역
Bitbucket에 있는 소스를 가져와서 Maven이나 Gradle로 빌드하고 **파이프라인으로 묶어서 패키지**화 하여 배포 가능

# AWS

클라우드 서버 구축 서비스

- 전동적 IDC(International Data Corporation)
- 클라우드의 중요성 증대

# Docker

오픈소스 컨테이너 프로젝트
강의에서는 RDS, Maven, IBatis, SpringBoot, Spring Security, S3(이미지 정보) 를 이용해서 강의

## 서비스

카카오 로그인, 오프라인 후기 서비스, 도커 관리를 통해 학습
