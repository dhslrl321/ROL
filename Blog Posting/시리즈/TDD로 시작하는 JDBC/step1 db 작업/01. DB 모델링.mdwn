# 데이터베이스 모델링 종류

데이터베이스에는 3가지 모델링이 존재한다.

1. 요구사항 정리 : 개체와 개체간의 관계를 정의한다.
2. 개념적 모델링 : 요구사항을 토대로 개체와 개체들 간의 관계에서 ERD를 도출해낸다.
3. 논리적 모델링 : ERD 에서 관계 스키마 모델을 생성하며 정규화를 진행한다.
4. 물리적 모델링 : DDL을 이용하여 실제로 DB 스키마 및 테이블, 인덱스 설계

이 과정은 하나의 **학문**이 존재할 정도로 매우 깊고 다양한 이야기를 들을 수 있다.

하지만 우리의 목적은 **TDD를 이용한 JDBC 프로그래밍**이므로 핵심만 짚고 넘어가겠다.

자세한 사항은 다음 레퍼런스로 가서 학습할 수 있다.

1. [생활 코딩 데이터 모델링](https://opentutorials.org/course/3883)
2. [망나니 개발자의 데이터 모델링](https://mangkyu.tistory.com/27)
3. [Deep Play의 데이터 정규화](https://3months.tistory.com/193)

# 요구사항 정리

요구 사항을 정리할 때는 **개체**와 **관계**를 묘사할 수 있는 하나의 동사 문장이어야 한다.
우리는 문제와 문제집 그리고 사용자들의 관계만 파악하면 된다.

## 사용자 vs 문제

사용자는 **여러 문제**를 해결할 수 있다.
문제는 **여러 사용자**들에게 해결될 수 있다.

## 사용자 vs 문제집

사용자는 **여러 문제집**을 생성할 수 있다.
문제집은 **한 사용자**에게 생성된다.

## 문제 vs 문제집

문제집은 **여러 문제**를 포함한다.
문제는 **여러 문제집**에 포함될 수 있다.

그럼 다음과 같은 1단계 ER 모델이 생성된다.

[1단계 ER 모델]()

## ER 모델 고도화 하기

저번 단계에서 진행했던 ER 모델에서 관계를 매핑 테이블로 분리하고 외래키도 내친김에 넣어보자.

[2단계 ER 모델]()

논리적 데이터베이스 모델링이 끝났다.

## 데이터 정규화 시작하기

[정규화 되지 않은 표]()

3단계의 데이터 정규화를 거치면

[정규화 된 표]()

를 만들 수 있다.
