# 데이터 타입

지난 시간 우리는 [SELECT](#)와 [INSERT](#), [UPDATE](#) 그리고 [DELETE](#)에 대해서 알아보았다.
그럼 SQL의 CRUD를 모두 알아보았으니 이제 MySQL에 대한 이야기를 조금 해보려 한다.

### What we Gonno do

- 데이터 타입이란?
  - 숫자 데이터 타입
  - 문자 데이터 타입
    - `VARCHAR` vs `CHAR`
  - 날짜 / 시간 데이터 타입

# 데이터 타입이란?

사실 SQL을 배우기 위해서 여기까지 온 사람들에게 따로 데이터타입이 뭔지 설명하지 않아도 충분히 알고 있을 것이라 생각이 든다.
그래도 한 줄로 짧게 정리하자면 데이터 터입은.

#### 데이터를 분류하는 가장 첫번째 기준이 되고, 자료들의 형태 값을 분류하는 기준

MySQL에서 사용하는 데이터 타입은 되게 많다.
총 30가지 가까이 된다고 하는데, 우리는 자주 쓰이고 필요한 것들을 먼저 알아볼 것이다.
일단 배우기 전에 종류부터 나누고 가자.

1. 숫자형 (INT, BIGINT, TINYINT, DECIMAL, FLOAT, DOUBLE)
2. 문자형 (CHAR, VATCHAR, TEXT, BLOB)
3. 날짜 / 시간형 (DATE, DATETIME)
4. 대용량 (LONGTEXT, LONGBLOB)

## 숫자 데이터 타입

숫자 데이터 타입에는 주로 다음과 같은 것들이 사용된다.

- INT, INTEGER
- BIGINT
- DECIMAL
- FLOAT

<table style="border-collapse: collapse; width: 100%; height: 95px;" border="1" data-ke-style="style13"><tbody><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">데이터 형식</td><td style="width: 33.333333333333336%; height: 19px;">숫자 범위</td><td style="width: 33.333333333333336%; height: 19px;">특징</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">BIGINT</td><td style="width: 33.333333333333336%; height: 19px;">+- 900경</td><td style="width: 33.333333333333336%; height: 19px;">큰 정수를 저장할 때 사용되는데, 주로 PK에 AUTO_INCREAMENT 속성과 함께 사용한다.<br><b>(uuid로 저장하는 방법도 다음에 배워보자)</b></td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">INT, INTEGER</td><td style="width: 33.333333333333336%; height: 19px;">+- 21억</td><td style="width: 33.333333333333336%; height: 19px;">우리가 일반적으로 알고 있는 Integer형</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">DECIMAL</td><td style="width: 33.333333333333336%; height: 19px;">ㄴㄹㅇ</td><td style="width: 33.333333333333336%; height: 19px;">돈과 같은 아주 정확한 수치를 저장해야할 때 주로 사용된다.</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">FLOAT</td><td style="width: 33.333333333333336%; height: 19px;">ㄹㅇㄴ</td><td style="width: 33.333333333333336%; height: 19px;">근사치의 숫자를 저장하는데, 상당히 큰 수를 저장할 수도 있다.</td></tr></tbody></table>

## 문자 데이터 타입

문자형 데이터 타입에는 주로 다음과 같은 것들이 사용된다.

- CHAR(n)
- VARCHAR(n)
- LONGTEXT
- BLOB

<table style="border-collapse: collapse; width: 100%; height: 95px;" border="1" data-ke-style="style13"><tbody><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">데이터 형식</td><td style="width: 33.333333333333336%; height: 19px;">바이트 수</td><td style="width: 33.333333333333336%; height: 19px;">특징</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">CHAR (N)</td><td style="width: 33.333333333333336%; height: 19px;">1 ~ 255 Byte</td><td style="width: 33.333333333333336%; height: 19px;">고정형 길이의 문자형이다.<br>1 ~ 255 바이트를 n으로 지정할 수 있다.</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">VARCHAR (N)</td><td style="width: 33.333333333333336%; height: 19px;">1 ~ 65535 Byte</td><td style="width: 33.333333333333336%; height: 19px;">가변형 길이의 문자열이다.</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">LONGTEXT</td><td style="width: 33.333333333333336%; height: 19px;">1 ~ 4294967295 Byt</td><td style="width: 33.333333333333336%; height: 19px;">게시판의 글, 공지사항과 같은 엄청나기 긴 길이의 데이터를 저장할 때 사용한다..</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">BLOB</td><td style="width: 33.333333333333336%; height: 19px;">1 ~ 65535 Byte</td><td style="width: 33.333333333333336%; height: 19px;">사이즈가 큰 외부 데이터를 저장할 때 주로 사용된다.</td></tr></tbody></table>

### varchar vs char

CHAR와 VARCHAR 은 같은 **문자열을 저장**하는 데이터 타입이다.
이 둘의 특징은 알고 넘어가야 하는데, CHAR 타입은 **고정형 길이**임에 반해 VARCHAR은 **가변형 길이**이다.

만약 'Hello' 를 **CHAR(10)**과 **VARCHAR(10)** 에 저장한다고 해보자.
그럼 다음과 같이된다.

```js
CHAR(10) : "Hello-----" // 10의 길이 할당
VARCHAR(10) : "Hello" // 5의 길이 할당
```

이렇게 CHAR은 어떤 문자가 들어오더라도 지정된 n 만큼 길이를 할당하고 어떤 경우엔 낭비가 되는 상황이 바랭할 수 있다.

##### 그럼 무조건 VARCHAR를 쓰는게 이득인가요?

절대 그렇지 않다.
CHAR 형식으로 지정하는 것이 INSERT/DELETE에서 압도적으로 좋은 성능을 발휘하기 때문에 생년월일, 전화번호, 태그등과 같이 항상 **고정된 길이임을 알 수 있는 데이터**는 CHAR로 지정하고, 그렇지 않는 비밀번호, 이름, 아이디와 같은 데이터는 VARCHAR로 저장하도록 하자.

## 날짜 / 시간 데이터 타입

날짜와 시간 데이터 타입은 다음과 같은 것들이 사용된다.

<table style="border-collapse: collapse; width: 100%; height: 57px;" border="1" data-ke-style="style13"><tbody><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">데이터 형식</td><td style="width: 33.333333333333336%; height: 19px;">바이트 수</td><td style="width: 33.333333333333336%; height: 19px;">특징</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">DATE</td><td style="width: 33.333333333333336%; height: 19px;">3</td><td style="width: 33.333333333333336%; height: 19px;">2021-10-10 과 같이 YYYY-MM-DD 까지만 저장됨.</td></tr><tr style="height: 19px;"><td style="width: 33.333333333333336%; height: 19px;">DATETIME</td><td style="width: 33.333333333333336%; height: 19px;">8</td><td style="width: 33.333333333333336%; height: 19px;"><span style="color: #333333;">2021-10-10 11:12:42 과 같이 YYYY-MM-DD HH:MM:SS 까지 모두 저장</span></td></tr></tbody></table>
