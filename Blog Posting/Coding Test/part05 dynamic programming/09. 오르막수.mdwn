# 문제

> 해당 포스팅은 백준의 [문제 이름](https://www.acmicpc.net/problem/11057) 의 접근과 해결 방법을 설명한 글 입니다.  
> 정답 소스 코드를 확인하시려면 [solve url](#) 에서 확인 가능합니다.

이 문제를 해결하기 위해 **어떤 방식으로 접근**해야 하는지를 먼저 생각해보자.

# 해결법

이번 문제는 [지난 시간]()에 배웠던 [백준 쉬운 계단 수](https://www.acmicpc.net/problem/10844)의 문제와 비슷한 문제이다.

## 접근법

DP 테이블은 길이가 n자리인 오르막수에 0~9가 각각 몇번이 들어가는지 담긴 **2차원 배열**
결과 출력은 n번째 2차원 배열의 원소를 모두 더한 값이 된다.

```java
int[][] dp new int[n+1][10];
```

## 오답 후보

## 정답 코드

```java
import java.io.*;

public class Main {
  public static void main(String[] args) throws IOException{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    int n = Integer.parseInt(br.readLine());

    int[][] dp = new int[1001][10];

    // 1자리수에서 오르막수의 개수
    for(int i = 0; i < 10; i++) {
      arr[1][i] = 1;
    }

    for(int i = 2; i <= n; i++) { // 길이 0 ~ n 까지 반복

    }

    bw.flush();
    bw.close();
  }
}
```

---

## 문제 회고

> 회고

#### 정답 소스 코드를 확인하시려면 [solve url](#) 에서 확인 가능합니다.
