# 문제

> 해당 포스팅은 백준의 [문제 이름](https://www.acmicpc.net/problem/1003) 의 접근과 해결 방법을 설명한 글 입니다.  
> 정답 소스 코드를 확인하시려면 [solve url](#) 에서 확인 가능합니다.

문제

# 예제 입력 & 출력

# 해결법

해당 문제는 재귀 호출을 사용한 일반적인 피보나치 함수에서 0과 1이 각각 얼마나 출력되는지 확인하고 싶어하는 문제이다.
즉, 우리가 지난 재귀 호출 이론 시간에서 이야기 했던 0과 1의 중복에 대해서 생각해보자는 문제로 받아들일 수 있다.

근데 조금 생각을 해보아야 할 것이 시간 제한이 **0.25**초로 주어진다.
어떤 언어이던 간에 **추가 시간은 주지 않는다고 한다.**
그럼 사실상 우리의 알고리즘이 1초에 400만의 연산만 커버할 수 있다고 생각해야 한다.
피보나치 함수의 시간 복잡도는 지난 [피보나치 수5](https://wonit.tistory.com/383?category=750230)에서 알아보았듯, 트리의 특성을 그대로 이어받아 2의 n제곱이 된다고 했다.

문제에서는 n이 40까지 주어질 수 있다고 했으니 2의 40제곱까지만 커버를 할 수 있다고 했을 때 2의 10 _ 4를 하면 1024 _ 4 를 수행하면 1조가 나온다..

그럼 절대로 재귀호출로 풀면 해당 문제는 통과하지 않으니 다른 방법을 생각해야 하는데, 이렇게 아주 많은 양의 데이터, 많은 양의 문제를 한 번에 해결하기 힘들 때 작은 여러 문제로 나누어서 푸는 **동적 프로그래밍**을 도입할 수 있다.

### 오답 후보

### 정답 코드

```java

```

---

#### 정답 소스 코드를 확인하시려면 [solve url](#) 에서 확인 가능합니다.
